node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 11
        }
      }
    }
  }
}
node {
  name: "sequential/dense/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 11
          }
          dim {
            size: 32
          }
        }
        tensor_content: "`\316\253>\207\022}?j\315o>\3561\033\276\314$\024\276\022c7?t \237=\312f\233\276Q-}\276\334\230\032>@\324+\277wC\"\277\330a[>=Q5\277\200\234c\273}l0>\033\027\241\276\365Nw\277Bd\006\277\275n\200\273\377\273\021\277\272\234k\276\027\236\230\276\303!\027\276U\222\003\277\335\037\215\276x\014&?92\233\276\341\'g\277\3622\220?R\341\303>\0331$?w\202\257\276+{\n@\366,\372\275[\024\216>\260X\251?\206Y\007\277\212\323D\276h\364\177=zY1\276\371\232p=\020O\316\276\243\267\2738\000h\354\273\356\013\376?PF\267\276A\266#>tob\276\270\351\270>\256\022\220>*\207\221>\257\330\250=\023\320^\276l?\037\276\261\220\013\2760st\275U\270Q? \273N>]k4\277\234\253E?\376\004\335=z\331\340>Ft*>\370\3338\276\235\031\237\276\332\327n?\264\222,\277\331\006\240\277\336\234\304>\321\204\036?\207\367F\27685\260<\371\006\342\276W\302\020@HZ\332\276\271\245\274\276*\263\303\276\307\373z\276\203t\223>M\321\217?\221tm>\216\"\256>\352i\030\277\002\300\255?]Oz\2768\026\220\275\251\265\247>\003\203\025?\351\320P\277\340\002?\277/\331\033?\322\223\026?\341\306\016?\020\333\377\276\226\032\005?\204\027\t\273\372Cv?i\017#?;\201\210\276{\347>\277\021M\360>\307!\275>\370\320\271\275\307\342\352\276<9\226\276\370\255\201?\037\2238\277\362\361\263\276\3048\256?\304i\240\275\325\261%?\2332{\277 \'\023\275O\347\275>r\245\212\276\0138\223\277\273\366\014>\264\273<>\350s?\275\031\307\024\277j+\230\276\322\267{\277\237S7\277\217\':?^\030l=AQ=\276\251dZ>\331\235\240\276\360\355\327?\335\000\216\277\353\216w\2753\276\205\277\335\2401\277\365\033\002\277\240\031\332\275\334\027\251>i\256\013\277j\272\204?U\302:?H\327\014\275\316c\240?\265/\227\271\365\3466\277\342\'l\277I\n\220?\025\373\364>WhO\277w\273\211?\253\270\004\276\322+\001?\200\341\374\275KA\256>\231g5?51\003?D\002+>V\367\222?\006\026\013;\335Y\242>\215\036j\277N\276\201\2760\325\246\276\364,\\\276\035\207\037>\333\222\231?\234/\270?E\371\275>\200\260\017>6M@\276\214\\\"?v\366\202\276\311!\023\277r\343W\276`A\217\276@\326g>\0331\351?\231~\361=\310\250-?\213\020&\277Y\265\206\274k\332=\276\326\2662\2761\025%\2769\032\241\276\237\033\025>bV\310\276\177\304\256\276ZKB>\213\261\322\275u\223\321\276\331\336\314\275\247\300\347;\246\317\200\302#wZA\373Ly\300\032S\225>m%i@\370\213\033@g4\303@?:5>\224\010 \300\357\360(\302\005p0\301\277\237\023\301\031\357\003\276\220A\372@#\234\301=2\211 @\021\327\215@cl\204@\226e\025\301}R\267?ol\252?;[\311\276\311\301\323\301J`\255=\357\236\200>D\364\225?\024+*\302Pw&\300\254u\325@\316\310\030\277\037\263\251\300H\244\201\3027\313\"\274\220DM\276fXe<\033HH>\025\360\021\277@ B\277XnU\277B\2145\276\"\323t=\206\256\362\276\375Jx\276\230\340\306\276)+y\276;\270\257\276\021\275\237\272\275IW\277\026\004`\275\211\232F?\002\324\373\276~1\351>\302\375\010\276\310E\t=\214=\221\276\326%\223\276\230:\335\276k \n>\213\317\235\276\316\006\217\277\tS\025\27608\t\275\001\316\216\276i\326\216>\355\263\347\274,\230\223\2775\203\370\276\037\017:\275>y\t<\2351&\276\314\361G\275 \361s\276\370\226&=\311O2=(N\036\277`\237\265=$\332e\276W\337\014\277\031+\207\2767\351\255>\351X\t\277J6\230\276f\021\334>\352H/\277!\007\255\276\311\255\231\276\334\246z\277H\003?\276\025\372\326\275\260,\t\277\177\324\034>l\302\022?\247\263C\276\230\324x\276]0\222\276\224.\243;\335\357\213\301\204\354\206\277\034b\362\277\345\277\3449\2076\334=y\232M?Dg0?\247\037&\276\260\000\305>\010\301\230\301\322\010\317\300\204.\202@\325N\251\276i+*\300t\374e\276\007h\317\276(\363)@.\311\351?\331_\307\300\351h\231>\004#c\300=\302\245\2751{\225\277F\0043\275\352J\247\276 \331s>\356#\027\301\1771H\300\322\233\236\276x\367f\277\270s\021\300d\251\373?;\375v>X@\263\274z\020\360>\314\230\247\276\004Q\212>\313\272\021\2771N\332>\244\322\240\276\014\206\336\276J\026q\276}\263\020\275K\030\217\277\220W\231\275+\352<>\311\277)\276+Rn?\250\373v;8\244\006\276L\246\213>^k0\276\334\327@?x\361\005\276\204\327\370\276\346\313i\276\000x0\277-\264\351\276\003\200,>l\323\335\276\221Y\212=\275x\n??\346&\277\301 \335>"
      }
    }
  }
}
node {
  name: "sequential/dense/MatMul/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/MatMul"
  op: "MatMul"
  input: "x"
  input: "sequential/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/dense/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "Y\2070>\354)\210\277\325+&\277J\241\236\276\201\200\232\276T\217\244\276\373o\002\277\337\020\n\275J}\305\276\216\255\223\276\35442\277\346\270\331\276\000\000\000\000\301\366\321\277\037\311\022\275\037\300t\277u!\242> \345\210?\t\365H\277\315\354!\277\026o>\277ybm\275\255\307\321>\333\024\242\274\026\343\005\277\023\214\264\276X\373t\276\325\000\202\275\2606\203\277\025\261\324>`X\362\276\234\200-\274"
      }
    }
  }
}
node {
  name: "sequential/dense/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/BiasAdd"
  op: "BiasAdd"
  input: "sequential/dense/MatMul"
  input: "sequential/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/dense/Relu"
  op: "Relu"
  input: "sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_1/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\364\254s?\"\372\037@\223\273\220?\266\303!?\024\014\202\300o*\336?\321/c@w`\207\300\"\r\327>\201\226p\277\245p\333\277Lt\376?Y?\250@32X@\363\301U\300J\005\351=V\261&\276bN\243\276\256k\343\275\226F\270\277$6\230\275\\\004-?\266\361\223\277\332\030\214>\224\312,=3\226\363>@\304\022\300G>\235\277K\367\312>\r\033\221=\272q\000?\031\345??\302\234B\2764\t\"\277\013\211\257?\003\345W\275*\272\237\277k\346\353?\374Xw\277s\206a?\211\272\241\275\245\332N\277\2139\200\277\207\3066>\204Dr>6(*\277\321\2403\276uW\246\277\334\036\233\276\324\331\272>\'\036/\277So\017\277M1\364<\266\255\n\275\250\222\216>\351K\213>\266\363!>\220\216\215\276\370\0061>\002\024y>l\246\376>L+y\276\332F!>\220`\207>\375d\016\277)\201\033\300(\330\371>\270\026\203\275A8\266\276\034\341\213>\322\250\361\275\010\263\241\277\030\363\241\276\0174&>\035\300V?\225\354m>\311cD?\204\240\341\2761S\346=u\210\245\277\330-)\275{\002\020\277\356\252\355>\260\025.\277\017v\366\275\020\245y>5:\333\276Or4\277\261.\n\276\357x\260=H\014m=\243\240\250>)\325\376\276\256\336o>8tG\277%c\354=\341k\020>\345M\345=\332b\r\277F\356\313\274\325\260\177\276o=\000?^\274\212\277\231A\316>\305\177\235\276\233h\204\275\300\356\332>\374\0319=\014!-\277\263\226\374\274\301\260\266>\362\261\236\276\356\235t\276\251\\\222=b\354\'>xj\373=\020C\270\274?\313\277=\372\313\304=z\212\213>M\341\233>\265K\024\276\356&v>\030\340\306=<g\374=u\206\261\276\266\305\035>q\2410>\006\207\331\275\355\234\262>\3162\222\2742j\206\276O\013\324=c\367M\276\217u;>\251\010\255\2747\227g?\266\352w\277\n\203\234>\257s\323\276\230\332\273>\341\\\232\275H\322\250=\346\017\255\2758?\030?u\234]@\231u\221?\3607\244?e\027\360\300\225\303\240=\354n\024@\325\233\213\277[v]>5\316U?\205h\032?*\273\022=b\273\360\276\312\342\\@\354\\*\277\256\326\024\276!J\335?\315\r\357\275\230\035R\277M\205M>\005\t/>\271\3022?\263\316\236>\322\326d?M\327\350\276;d\352>v\027\362\277A\365\252>\201\214\334?N\365B>\360\375\313>xAN\276\321\204\220\276\226\037\014?\227\032\310\277\311@\324>\254\312\364>n\221\017\277}\254c>\237\027\341>B\t\322=\247m\322\276R4l\277`\2452\276\037A7@pw;?\233M\235?D\365\033?&\353\231\276\236#\220\276\326\313v\276\021t\200>Q\262\210>\240\356h\274\206b\262\276\370\321\201=v\302I\276\214\361\234\275*\352\215\276\000y\223=E\371\210>z\354B>j\366T>\250\365x=(\2269?j\022J?\234X\317\276\\o\207\277\3663\022?daA?\r\2133\276\360\306Z?\230\253\217?\254xB?C\357\336\277\320^\344?\252\317.?\263\265\033\275\003\\\277>o\302w>\033\242\214>\002\023\275\275\224!.\276\323^\030=U\307K\274\014M\035>x\362W\275\332\227\252>t\025N\276\202eC>G\037\235>]<\200=\375\226T>1\363\237\276\2069n>[\250\004\276\251V\014\277\0211\231\276\242\241\202>\377\247K\277JT\023\277\351\255\217?\227\306\217\277W\3575?\310\223D>\230\020\365;\242\317d>G\220\341<\234\235\032\277\331\036\264>\264\202.>\013\325\375=\260\337\341>\351\270\227\277\255\301\021@^]\215>\330\232\013\300z\333\332>8\311\341\277\336\000\203>\365\3146?\326@\276\276\025\362\022?\325\346 ?+\306=@\374\314\263\276\006`\273\277\212\256\227\277\214\200\215\276b\336\246\276\245_C\277>\347I\275\321+p>\232\027\302\276\031\354\211=\026e\331\275#\203\024\277\254\250E\277Qa\340\275Y\227\356\276\347D\267\277\200\260\027\276\re\004\277\201\345\301:Q\030G?\367\217\235>\243j\330?c\323\316=\"\272\356\275\265CV?DeY?%~c?\232\020]\276i/s>\206\261\262\277\277\244\257?\276\214\272?|\234\024>}\032J?\364\003&=\212\244\341\275^\342|\277\001^\262>`G\371\275\013\014\025\277F n\275\006\372\025\276Q*\000\277\214\316\315\276\251\254\251\275E_\257>\315\276\252>\304`\005\276\372\227\331\276\0060\347;\217\254\264\275\033\373<=\356\377\010?Es]?\251\004J\275\020\304\352\276\346\342\014\276`a\325\276N\024\274?\321\235\314>$r\037@\341\253\236\277\031]\206=@$\250?RM_=p\315*?\037`\n?\212\272`\276\371\213\226>\200\211\017\275w\2200\276\347\225\334\276y\232\332\275\216\375e>\342\374E\276\3216\241>\243\207#=;\213;>H\373\315\276\317\201\332<\026\275q\276s\307\205\276\312uY\275a\206\027?-\355\003\276\212k;@\235[;>\360\354\240\276\354q\360?Gbv?\266\227X?\376\234\030>\237\227@?\r)*\300s:\002@\317\352=@\350O\217\277\221\250\022?\317\347F\277\032z)>\277e\200\275=\351\244\276\306F\241\276J\337\004\274\265tv\276X\177\\>=~\301>7\276\002\276\032#\021\276\323G\322\2751/\210>\264\013\222\275\313\030c><\311\370=0x\207>\232\n\006?\221f\376>}\244\244\277\211\0379\276\320\201\254=y\234\336<\377\254G>T\305\300\275\363\227\204>X\364L\275\242T\262>s=\024\2773[9>\210\334\346\276\357a\020>/4\037\275(\233\207>\227\214\000\276\303\343\020?Zu->\343/D?)\2611?<+v\275\200_\333>\340`\360\275\241\"\037?\274RT>\021\034U?i?\031@\215z\360\276:\240\263?\222\205\357>>$`\277\253l\202?T\017\326\277R\024\207?\212B\274\273\261\247->\263\257\242?\233\333\367>\\SK>r\335\213?\367\355\035\300\365d\321=*\254\311?m\017\203=\3072\r?E\227P=}\030B>\032\361\222>\301k\214?\317\"\335?\251J\335>XZ\002@G\303&?\254\341\307>\256w\204\273\002\242\034\276\037F\320=s3\227>Uy!@\323+\222>\334p\016?\222\022\265\275\232\351B?\000Y\305\276\342\023\301\276\3158\253\276\354@\014?\326-F\276\356\207\210\276L\013\243>\322\302o\2777qP\277\253\266\034\277\\w\367\276b[\020>e\264\332\274\331w\340=t\033\207\275{k\223\276\n\345Y\276\325\247\254\276\330\360\317=\260?\t\275\237%\231?Y\365\331\274%\017\317>Fn\347\276f\251\254\275\021[\033?\251A\202>\216\367\272\277\327#\332=\327\207\313\276\036\323\255>\242L\261\276(\310G\276\334\\\215>E\250\003\275\223@\325>\264\231\306>\221\203+?/\221\250\276\021L\t\276\253W\341=\254\214\315<.o\270\275q\377\005>\271\332\235>\n\204\272\277t\353y=\3032\371>E\240\260\300\361\004\276=\004N\324=D^k\300D\022\376\276\315\313\216\277i\341\247>\323\320\274\277\r\325a\300\027\306\"\2775OA?\201\321\337\275\2223?\300\230\246\335\300u\317\214\300"
      }
    }
  }
}
node {
  name: "sequential/dense_1/MatMul/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense_1/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_1/MatMul"
  op: "MatMul"
  input: "sequential/dense/Relu"
  input: "sequential/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/dense_1/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "fV\006\277\007\342\r\277Rz\257\276\276\223\010\276-\027\335\275i\374]?\t)$\277\371\351C\277\344\253\371\276\334\016\333\276=\214\224\273\367\215\357\276XF\200\277\007i\247\276/8I\277\204\313\371\275"
      }
    }
  }
}
node {
  name: "sequential/dense_1/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense_1/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "sequential/dense_1/MatMul"
  input: "sequential/dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/dense_1/Relu"
  op: "Relu"
  input: "sequential/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_2/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\235\216\277?\340\273\301\276\023\336L>\300>5\276\220M\276\277q\334\221\2775\343\"?i\3317?V\363\034?\023\342\315?\024Y\262>A}8\277\236V\310>\222\245\234=I\274\373>\355\233\036?.\333\255?:\330\\\277\270z&\276^]2\275B\227\013?\001\277$?\271\370\001@\335S\364\2769\310\314>\032Y\001\276(\220\235\276\361~\230?\254\020\250>\013\025>\277.\262\257?\350\235\300<\326\324\233\275[\376r?\024\332\005\276\317I\376\277\312c\027\301Y\303\216?h\005\331?\262\"\037?\302\353q\277\025\221\217\276\374\306\213\276\024\330\330=\354\337\371\275T\375\271\276\371\263\220\277=\314\230=\362%\005\276>\272\r@P\2645\275\0176\240\277\002\217\312?\003\323\242>\220\264\376?\031%\005?e\203\013@\235\314T>\204n9\2763\220\203>U\362@\300\222\361\237\276\216$b?\240!\365?\025\340F>\306\006&>\212\211\275\276\220\365\300=:\225\245\27606\t?2PB>]\214K>\224\332*?\270\215\035?\341\032\253=\032\375\236\277\354\207\310>5bM>1(M?\005\370\207?\313\0318?\004\217??/\303\246=\344DW\275\232bI?xu2?x\303\307>9\024\256\276\372#X?\n\361M\276\366\201\246\274*\237\311\276\026}\224?)\311\026>3\211\242?S\310\">j\250F>\344r\307\276\225\307\254<_\270;\276y\260$@\215k\316>U\221=@\330c<?\320\307\024?\206\233\355?:\310\320\276E\211\317\277\333\007~?\005\3747?\243\354m?V\244z?\244\276\214?[\200\245?\363\306\332\275\205A\245\277bM\020>\314,q>\275\365\306?\214u\027?\345s\364>\373\241z>\225?\201\276\232^\366\276U1\202\276c\243\024>\254\277\032?\320\356Y?"
      }
    }
  }
}
node {
  name: "sequential/dense_2/MatMul/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense_2/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_2/MatMul"
  op: "MatMul"
  input: "sequential/dense_1/Relu"
  input: "sequential/dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/dense_2/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        tensor_content: "\247\326u?\350\033\211?J\030\363\275\237$\315=\006\223\267=\030\363T\274\232w\311\277\306a\333\275"
      }
    }
  }
}
node {
  name: "sequential/dense_2/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense_2/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "sequential/dense_2/MatMul"
  input: "sequential/dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/dense_2/Relu"
  op: "Relu"
  input: "sequential/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_3/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
        }
        tensor_content: "!\253\241\277\277\203\327\277bU+\300\301\365\340\2759\343\265\276\231@`\2767\353\330\277_\271\026\277\261\210\245;\217\006\371\276\265\333\024\277\033\373,?\356\203\022\301Nrw\276\321A\201\276\227\376\210\277\333\034\270\276>\277\302>\305t\314\275|\\\350>\235\214\355>\341\313\t?1\232\322\276 \243\270\275\\6\253\277\335\366\367\276\270\306T\300\024\2630\301F&z@\026\2033\300\0342\234\300\021\265\333\277\302\362\220\300\361pW\277\337\271\314\276\247k>\301\243<O\301W\316\334\277pg\203\275\310og\276\253)\217\300u\274U\301v\342#> m[\301\255\201(\3014\217\311>\213\371\000\300^\000\326\277P\227e\276$\222<\301\372h4\301.\036\204\301u:\301\275\264G\202\277\267\215\273\276\362\320\324\276\205Wo\277EYY\276\303\276\200\276t\223\306\301!K\242\277=\003\254\277l\227\314\275\301;\016\277"
      }
    }
  }
}
node {
  name: "sequential/dense_3/MatMul/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense_3/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_3/MatMul"
  op: "MatMul"
  input: "sequential/dense_2/Relu"
  input: "sequential/dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/dense_3/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        tensor_content: "\231Y\323\276\300cR\277\002jv\277\266\216{?\321.\351?\006\217\315\277,\001\273\277Qs\222\277"
      }
    }
  }
}
node {
  name: "sequential/dense_3/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense_3/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "sequential/dense_3/MatMul"
  input: "sequential/dense_3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/dense_3/Softmax"
  op: "Softmax"
  input: "sequential/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "sequential/dense_3/Softmax"
  input: "^sequential/dense/BiasAdd/ReadVariableOp"
  input: "^sequential/dense/MatMul/ReadVariableOp"
  input: "^sequential/dense_1/BiasAdd/ReadVariableOp"
  input: "^sequential/dense_1/MatMul/ReadVariableOp"
  input: "^sequential/dense_2/BiasAdd/ReadVariableOp"
  input: "^sequential/dense_2/MatMul/ReadVariableOp"
  input: "^sequential/dense_3/BiasAdd/ReadVariableOp"
  input: "^sequential/dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 716
}
